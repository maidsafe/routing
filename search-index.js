var searchIndex = JSON.parse('{\
"sn_routing":{"doc":"Peer implementation for a resilient decentralised network …","t":[12,13,13,3,13,13,13,13,3,13,13,13,17,13,13,4,4,3,13,17,17,13,13,13,13,13,13,13,13,13,13,17,17,13,13,13,13,13,13,13,4,13,13,8,3,13,13,17,13,13,13,6,3,8,13,3,3,13,17,3,10,10,10,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,10,10,10,11,11,11,11,11,11,12,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,10,12,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,12,12,11,11,12,12,11,11,11,11,12,10,11,11,10,11,11,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,10,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12],"n":["0","AddressNotReachable","AdultsChanged","Cache","CannotConnectEndpoint","CannotRoute","ClientLost","ClientMsgReceived","Config","ConnectionClosed","CreateError","Demoted","ELDER_SIZE","EldersChanged","EmptyRecipientList","Error","Event","EventStream","ExtendSignedError","FIRST_SECTION_MAX_AGE","FIRST_SECTION_MIN_AGE","FailedSend","FailedSignature","InvalidConfig","InvalidDstLocation","InvalidMessage","InvalidPayload","InvalidSectionChain","InvalidSignatureShare","InvalidSrcLocation","InvalidState","MIN_ADULT_AGE","MIN_AGE","MemberJoined","MemberLeft","MessageReceived","Messaging","MissingSecretKeyShare","NoMatchingElder","NoMatchingSection","NodeElderChange","NodeNotReachable","None","PeerUtils","Prefix","Promoted","ProposalError","RECOMMENDED_SECTION_SIZE","Relocated","RelocationStarted","RestartRequired","Result","Routing","SectionAuthorityProviderUtils","SectionSplit","SendStream","TransportConfig","TryJoinLater","XOR_NAME_LEN","XorName","addr","addresses","age","age","ancestor","ancestors","as_fail","as_ref","as_ref","bit","bit_count","bootstrap_cache_dir","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clap","clear","clone","clone","clone","clone_into","clone_into","clone_into","cmp","cmp","cmp_breadth_first","cmp_distance","cmp_distance","common_prefix","contains_elder","count","default","default","default","default","deref","deserialize","deserialize","deserialize","drop","elder_candidates","elder_count","elders","eq","eq","eq","equivalent","equivalent","equivalent","external_ip","external_port","finish","first","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","forward_port","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_clap","from_content","from_elder_candidates","from_str","get","get_addr","hard_coded_contacts","hash","hash","hash","idle_timeout_msec","into","into","into","into","into","into","into","into","into","into","into","is_compatible","is_covered_by","is_elder","is_empty","is_empty","is_extension_of","is_neighbour","is_reachable","keep_alive_interval_msec","keypair","keypair_as_bytes","len","local_ip","local_port","lower_bound","matches","matches_our_prefix","matching_section","max_msg_size_allowed","name","name","name","names","ne","ne","new","new","new","new","next","not","other_sections","our_adults","our_adults_sorted_by_distance_to","our_connection_info","our_elders","our_elders_sorted_by_distance_to","our_history","our_index","our_prefix","our_section","partial_cmp","partial_cmp","peers","popped","prefix","propose_offline","public_key","public_key_set","pushed","random","range_inclusive","remove","remove_expired","section_chain","section_key","section_key","send","send_message","send_user_msg","serialize","serialize","serialize","set","set_joins_allowed","set_reachable","sibling","sign_as_elder","sign_as_node","source","start_connectivity_test","substituted_in","to_owned","to_owned","to_owned","to_string","to_string","transport_config","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","upnp_lease_duration","upper_bound","verify","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with_capacity","with_expiry_duration","with_expiry_duration_and_capacity","with_flipped_bit","write_hex","write_hex_upper","err","err","err","added","age","age","content","dst","elders","elders","msg","name","name","new_keypair","previous_name","previous_name","previous_name","remaining","removed","section_pk","self_status_change","self_status_change","sibling_elders","signed","src","user"],"q":["sn_routingsn_routing::Error","","","sn_routing::Event","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","Notify the current list of adult nodes, in case of …","A [<code>BTreeMap</code>]-backed cache supporting capacity- and …","","","Failed in sending a message to client, or connection to …","Received a message from a client node.","Routing configuration.","","","The node was demoted to Adult.","Number of elders per section.","The set of elders in our section has changed.","","Internal error.","An Event raised by a <code>Node</code> or <code>Client</code> via its event sender.","Stream of routing node events","","Defines the higher bound of this range.","During the first section, nodes can start at a range of …","","","","","","","","","","","The minimum age a node becomes an adult node.","The minimum age a node can have. The Infants will start …","A new peer joined our section.","A node left our section.","Received a message.","","","","","A flag in EldersChanged event, indicating whether the …","","There was no change to the node.","","A section prefix, i.e. a sequence of bits specifying the …","The node was promoted to Elder.","","Recommended section size. sn_routing will keep adding …","This node has completed relocation to other section.","This node has started relocating to other section. Will …","Disconnected or failed to connect - restart required.","The type returned by the sn_routing message handling …","Interface for sending and receiving messages to and from …","A new <code>SectionAuthorityProvider</code> is created whenever the …","Our section has split.","Stream of outgoing messages","QuicP2p configurations","","Constant byte length of <code>XorName</code>.","A 256-bit number, viewed as a point in XOR space.","Returns the <code>SocketAddr</code>.","Returns the list of socket addresses.","Returns the age.","Returns the current age of this node.","Returns the ancestors of this prefix that has the given …","Returns an iterator that yields all ancestors of this …","","","","Returns <code>true</code> if the <code>i</code>-th bit is <code>1</code>.","Returns the number of bits in the prefix.","Directory in which the bootstrap cache will be stored. If …","","","","","","","","","","","","","","","","","","","","","","","","Clear the cache, removing all items.","","","","","","","","","Compares the prefixes using breadth-first order. That is, …","Compares the distance of <code>self</code> and <code>other</code> to <code>target</code>. …","Compares the distance of the arguments to <code>self</code>. Returns …","Returns the number of common leading bits with the input …","Returns a map of name to socket_addr.","Returns the number of items in the cache that match the …","","","","","","","","","","Returns <code>ElderCandidates</code>, which doesn’t have key related …","Returns the number of elders in the section.","Returns a map of name to socket_addr.","","","","","","","External IP address of the computer on the WAN. This …","External port number assigned to the socket address of …","Gracefully finish current stream","If true, configures the node to start a new network …","","","","","","","","","","","","","","","","","","Specify if port forwarding via UPnP should be done or …","","","","","","","","","","","","","","","","Generate a XorName for the given content (for …","Creates a new <code>SectionAuthorityProvider</code> from …","","Get a value from the cache if one is set and not expired.","Returns a socket_addr of an elder.","Hard Coded contacts","","","","If we hear nothing from the peer in the given interval we …","","","","","","","","","","","","Returns <code>true</code> if <code>self</code> is a prefix of <code>other</code> or vice versa.","Returns whether the namespace defined by <code>self</code> is covered …","Returns whether the node is Elder.","Returns <code>true</code> if the cache contains no items.","Returns <code>true</code> if this is the empty prefix, with no bits.","Returns <code>true</code> if <code>other</code> is compatible but strictly shorter …","Returns <code>true</code> if the <code>other</code> prefix differs in exactly one …","Returns the reachable flag.","Interval to send keep-alives if we are idling so that the …","The <code>Keypair</code> of the node or <code>None</code> for randomly generated …","Returns the ed25519 keypair of this node, as bytes.","Returns the number of items in the cache.","IP address for the listener. If none is supplied and …","Port we want to reserve for QUIC. If none supplied we’…","Returns the smallest name matching the prefix","Returns <code>true</code> if this is a prefix of the given <code>name</code>.","Finds out if the given XorName matches our prefix.","Returns the info about the section matching the name.","This is the maximum message size we’ll allow the peer …","Returns the <code>XorName</code> of the peer.","The name of this node.","Returns the name of this prefix.","Returns the set of elder names.","","","Creates a new <code>Peer</code> given <code>Name</code>, <code>SocketAddr</code>.","Creates a new <code>SectionAuthorityProvider</code> with the given …","Creates new node using the given config and bootstraps it …","Creates a new <code>Prefix</code> with the first <code>bit_count</code> bits of <code>name</code>…","Returns next event","","Returns the info about other sections in the network …","Returns the information of all the current section adults.","Returns the adults of our section sorted by their …","Returns connection info of this node.","Returns the information of all the current section elders.","Returns the elders of our section sorted by their …","Returns our section signed chain.","Returns our index in the current BLS group if this node …","Prefix of our section","Returns the info about our section or <code>None</code> if we are not …","","","Returns an iterator to the list of peers.","Returns a prefix copying the first <code>bitcount() - 1</code> bits …","Returns its prefix.","Starts a proposal that a node has gone offline. This can …","Returns the ed25519 public key of this node.","Returns the current BLS public key set if this node has …","Returns <code>self</code> with an appended bit: <code>0</code> if <code>bit</code> is <code>false</code>, and …","Generate a random XorName","Inclusive range from lower_bound to upper_bound","Remove an item from the cache, returning the removed …","Remove expired items from the cache storage.","Returns the Section Signed Chain","Key of the section.","Returns the last known public key of the section with …","Send a wire message","Send a message. Messages sent here, either section to …","Send a message using the stream created by the initiator","","","","Set a value in the cache and return the previous value, …","Sets the JoinsAllowed flag.","Set the reachable flag.","Returns the same prefix, with the last bit flipped, or …","Signs <code>data</code> with the BLS secret key share of this node, if …","Signs <code>data</code> with the ed25519 key of this node.","","Signals the Elders of our section to test connectivity to …","Returns the given <code>name</code> with first bits replaced by <code>self</code>","","","","","","Configuration for the underlying network transport.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Duration of a UPnP port mapping.","Returns the largest name matching the prefix","Verifies <code>signature</code> on <code>data</code> with the ed25519 public key of …","","","","","","","","","","","","Creating capacity based <code>Cache</code>.","Creating time based <code>Cache</code>.","Creating dual-feature capacity and time based <code>Cache</code>.","Returns the neighbouring prefix differing in the <code>i</code>-th bit …","","","","","","New Adults in our section.","Age of the node","Age of the node","The content of the message.","The destination location that receives the message.","The Elders of our section.","The Elders of our section.","The content of the message.","Name of the node","Name of the node","New keypair to be used after relocation.","Previous name before relocation or <code>None</code> if it is a new …","Previous name before relocation","Old name before the relocation.","Remaining Adults in our section.","Removed Adults in our section.","The Sender’s Section PK.","Promoted, demoted or no change?","Promoted, demoted or no change?","The Elders of the sibling section.","The signed if the message was set to be aggregated at …","The source location that sent the message.","The SocketAddr and PublicKey that sent the message. …"],"i":[1,2,3,0,2,2,3,3,0,2,2,4,0,3,2,0,0,0,2,0,0,2,2,2,2,2,2,2,2,2,2,0,0,3,3,3,2,2,2,2,0,2,4,0,0,4,2,0,3,3,3,0,0,0,3,0,0,2,0,0,5,6,5,7,8,8,2,1,1,1,8,9,3,10,7,11,2,4,12,13,9,8,1,3,10,7,11,2,4,12,13,9,8,1,9,11,9,8,1,9,8,1,8,1,8,8,1,8,6,11,12,9,8,1,1,9,8,1,7,6,6,6,9,8,1,9,8,1,9,9,13,12,3,10,7,11,2,2,4,12,13,9,8,8,1,1,1,1,1,9,3,10,7,11,2,2,2,4,12,13,9,8,1,1,9,1,6,8,11,6,9,8,1,1,9,3,10,7,11,2,4,12,13,9,8,1,8,8,7,11,8,8,8,5,9,12,7,11,9,9,8,8,7,7,9,5,7,8,6,9,1,5,6,7,8,10,1,7,7,7,7,7,7,7,7,7,7,8,1,6,8,6,7,7,7,8,1,8,11,11,7,6,7,13,7,13,9,8,1,11,7,5,8,7,7,2,7,8,9,8,1,2,1,12,3,10,7,11,2,4,12,13,9,8,1,3,10,7,11,2,4,12,13,9,8,1,3,10,7,11,2,4,12,13,9,8,1,9,8,7,3,10,7,11,2,4,12,13,9,8,1,11,11,11,8,1,1,14,15,16,17,18,19,20,20,21,22,23,18,19,24,18,25,24,17,17,20,21,22,21,20,20,23],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["socketaddr",4]],[[],[["socketaddr",4],["vec",3]]],[[],["u8",15]],[[]],[[["u8",15]],["prefix",3]],[[],["ancestors",3]],[[],["fail",8]],[[]],[[],["xorname",3]],[[["u8",15]],["bool",15]],[[],["usize",15]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["app",3]],[[]],[[],["config",3]],[[],["prefix",3]],[[],["xorname",3]],[[]],[[]],[[]],[[["prefix",3]],["ordering",4]],[[["xorname",3]],["ordering",4]],[[["prefix",3]],["ordering",4]],[[["xorname",3],["prefix",3]],["ordering",4]],[[["xorname",3]],["ordering",4]],[[["xorname",3]],["usize",15]],[[["xorname",3]],["bool",15]],[[]],[[]],[[],["config",3]],[[],["prefix",3]],[[],["xorname",3]],[[]],[[],[["result",4],["config",3]]],[[],[["prefix",3],["result",4]]],[[],[["result",4],["xorname",3]]],[[]],[[],["eldercandidates",3]],[[],["usize",15]],[[],[["socketaddr",4],["btreemap",3],["xorname",3]]],[[["config",3]],["bool",15]],[[["prefix",3]],["bool",15]],[[["xorname",3]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],null,null,[[]],null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],null,[[]],[[]],[[]],[[]],[[["error",4]]],[[]],[[["securedlinkedlisterror",4]]],[[]],[[]],[[]],[[]],[[]],[[["publickey",4]],["xorname",3]],[[]],[[["argmatches",3]],["config",3]],[[],["xorname",3]],[[["replicapublickeyset",6],["eldercandidates",3]],["sectionauthorityprovider",3]],[[["str",15]],[["result",4],["prefix",3]]],[[]],[[["xorname",3]],[["socketaddr",4],["option",4]]],null,[[]],[[]],[[["sha3",3]]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["prefix",3]],["bool",15]],[[],["bool",15]],[[]],[[]],[[],["bool",15]],[[["prefix",3]],["bool",15]],[[["prefix",3]],["bool",15]],[[],["bool",15]],null,null,[[]],[[]],null,null,[[],["xorname",3]],[[["xorname",3]],["bool",15]],[[["xorname",3]]],[[["xorname",3]]],null,[[],["xorname",3]],[[]],[[],["xorname",3]],[[],[["btreeset",3],["xorname",3]]],[[["config",3]],["bool",15]],[[["xorname",3]],["bool",15]],[[["socketaddr",4],["xorname",3]]],[[["prefix",3],["replicapublickeyset",6],["intoiterator",8]]],[[["config",3]]],[[["usize",15],["xorname",3]],["prefix",3]],[[]],[[],["xorname",3]],[[]],[[]],[[["xorname",3]]],[[],["socketaddr",4]],[[]],[[["xorname",3]]],[[]],[[]],[[]],[[]],[[["prefix",3]],[["option",4],["ordering",4]]],[[["xorname",3]],[["option",4],["ordering",4]]],[[],[["iterator",8],["box",3]]],[[],["prefix",3]],[[],["prefix",3]],[[["xorname",3]]],[[]],[[]],[[["bool",15]],["prefix",3]],[[],["xorname",3]],[[],[["rangeinclusive",3],["xorname",3]]],[[]],[[]],[[]],[[],["publickey",3]],[[["prefix",3]]],[[["wiremsg",4]]],[[["option",4],["bytes",3],["publickey",3],["itinerary",3]]],[[["bytes",3]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["option",4],["duration",3]]],[[["bool",15]]],[[["bool",15]]],[[],["prefix",3]],[[["publickey",3]]],[[]],[[],[["error",8],["option",4]]],[[["xorname",3]]],[[["xorname",3]],["xorname",3]],[[]],[[]],[[]],[[],["string",3]],[[],["string",3]],null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,[[],["xorname",3]],[[["signature",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["usize",15]]],[[["duration",3]]],[[["usize",15],["duration",3]]],[[["u8",15]],["prefix",3]],[[],[["error",3],["result",4]]],[[],[["error",3],["result",4]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"p":[[3,"XorName"],[4,"Error"],[4,"Event"],[4,"NodeElderChange"],[8,"PeerUtils"],[8,"SectionAuthorityProviderUtils"],[3,"Routing"],[3,"Prefix"],[3,"TransportConfig"],[3,"EventStream"],[3,"Cache"],[3,"Config"],[3,"SendStream"],[13,"InvalidConfig"],[13,"CannotConnectEndpoint"],[13,"AddressNotReachable"],[13,"AdultsChanged"],[13,"MemberJoined"],[13,"MemberLeft"],[13,"MessageReceived"],[13,"SectionSplit"],[13,"EldersChanged"],[13,"ClientMsgReceived"],[13,"Relocated"],[13,"RelocationStarted"]]}\
}');
if (window.initSearch) {window.initSearch(searchIndex)};